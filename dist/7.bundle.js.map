{"version":3,"sources":["webpack:///./src/components/AppBar/index.tsx","webpack:///./src/components/AppBar/AppBarLayout.tsx","webpack:///./src/components/Icons/IconButton.tsx","webpack:///./src/components/Icons/Menu.tsx","webpack:///./src/components/Icons/MoreVert.tsx","webpack:///./src/containers/CategoriesPage/index.tsx"],"names":["_withStyles","__webpack_require__","React","_interopRequireWildcard","AppBar","_React$PureComponent","_inherits3","default","_a","this","props","children","theme","styles","leftIcon","titleText","rightIcon","otherProps","__rest","layout","createElement","_AppBarLayout2","Object","assign","_Card2","_mergeProps2","css","up","PureComponent","__decorate","withStyles","_ref","color","backgroundColor","minHeight","AppBarText","position","AppBarLayout","font","main","display","justifyContent","alignItems","padding","full","flexGrow","title","left","dark","Title","_react2","_pure3","iconButtonStyle","border","outline","WebkitTapHighlightColor","icon","style","e","Error","code","_SvgIcon2","d","viewBox","CategoriesPage","Fragment","_AppBar2","_IconButton2","_Menu2","_MoreVert2","type"],"mappings":"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","file":"7.bundle.js","sourcesContent":["import { withStyles, css } from 'withStyles';\r\nimport * as React from 'react';\r\nimport { IWithStyleProps } from 'Interfaces/react-with-style';\r\nimport mergeProps from 'utils/mergeProps';\r\nimport Card from 'components/Card';\r\nimport AppBarLayout, {IProps as AppBarLayoutProps} from './AppBarLayout';\r\n\r\n@withStyles(({ color }) => ({\r\n  AppBar: {\r\n    backgroundColor: color.AppBar,\r\n    minHeight: '56px',\r\n    color: color.AppBarText,\r\n    position: 'relative'\r\n  }\r\n}))\r\nexport default class AppBar extends React.PureComponent<IWithStyleProps & AppBarLayoutProps> {\r\n  public render() {\r\n    const {\r\n      theme,\r\n      styles,\r\n      children,\r\n      leftIcon,\r\n      titleText,\r\n      rightIcon,\r\n      ...otherProps\r\n    } = this.props;\r\n    const layout = (leftIcon || titleText || rightIcon) &&\r\n      <AppBarLayout {...{leftIcon, titleText, rightIcon}} />;\r\n    return (\r\n      <Card\r\n        {\r\n        ...mergeProps(css(this.props.styles.AppBar), otherProps)\r\n        }\r\n        up\r\n      >\r\n        {layout}\r\n        {children}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/AppBar/index.tsx","import { withStyles, css } from 'withStyles';\nimport React from 'react';\nimport { IWithStyleProps } from 'Interfaces/react-with-style';\nimport mergeProps from 'utils/mergeProps';\nimport { pure } from 'recompose';\n\nexport interface IProps {\n  leftIcon?: React.ReactNode;\n  titleText?: React.ReactNode;\n  rightIcon?: React.ReactNode | React.ReactNode[];\n}\n\nconst AppBarLayout = withStyles(({ font }) => ({\n  main: {\n    display: 'flex',\n    position: 'relative',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '16px'\n  },\n  full: {\n    flexGrow: 1\n  },\n  title: {\n    position: 'absolute',\n    left: '72px',\n    ...font.dark.Title\n  }\n}))((props: IWithStyleProps & React.HTMLProps<HTMLDivElement> & IProps) => {\n  const {\n    theme,\n    styles,\n    leftIcon,\n    titleText,\n    rightIcon,\n    ...otherProps\n  } = props;\n  return (\n    <div {...mergeProps(css(styles.main), otherProps)}>\n      {leftIcon}\n      <span {...css(styles.title)}>\n        {titleText}\n      </span>\n      <span {...css(styles.full)} />\n      {rightIcon}\n    </div>\n  );\n});\n\nexport default pure(AppBarLayout);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/AppBar/AppBarLayout.tsx","import React from 'react';\nimport mergeProps from 'utils/mergeProps';\nimport { pure } from 'recompose';\n\nexport interface IProps {\n  icon: React.ReactNode;\n}\n\nconst iconButtonStyle = {\n  padding: '0px',\n  border: '0px',\n  outline: 'none',\n  WebkitTapHighlightColor: 'transparent'\n};\n\nconst IconButton = ({icon, ...otherProps}: IProps & React.HTMLProps<HTMLButtonElement>) => (\n  <button {...mergeProps({style: iconButtonStyle}, otherProps)}>\n    {icon}\n  </button>\n);\n\nexport default pure(IconButton);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Icons/IconButton.tsx","import React from 'react';\nimport SvgIcon, { ISvgIconProps } from './SvgIcon';\nimport { pure } from 'recompose';\n\nconst Menu = (props: ISvgIconProps) => (\n  <SvgIcon {...props}>\n    <path d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z'/>\n  </SvgIcon>\n);\n\nexport default pure(Menu);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Icons/Menu.tsx","import React from 'react';\nimport SvgIcon, { ISvgIconProps } from './SvgIcon';\nimport { pure } from 'recompose';\n\nconst MoreVert = (props: ISvgIconProps) => (\n  <SvgIcon viewBox='6 0 12 24' {...props}>\n    {/* tslint:disable-next-line:max-line-length */}\n    <path d='M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z'/>\n  </SvgIcon>\n);\n\nexport default pure(MoreVert);\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Icons/MoreVert.tsx","import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport AppBar from 'components/AppBar';\nimport IconButton from 'components/Icons/IconButton';\nimport Menu from 'components/Icons/Menu';\nimport MoreVert from 'components/Icons/MoreVert';\n\ntype Props = RouteComponentProps<{}>;\n\nexport default class CategoriesPage extends React.PureComponent<Props> {\n\n  public render() {\n    return (\n      <>\n        <AppBar\n          leftIcon={<IconButton icon={<Menu />} />}\n          rightIcon={<IconButton icon={<MoreVert />} />}\n          titleText='Categories'\n        />\n        <input type='text'/>\n      </>\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/containers/CategoriesPage/index.tsx"],"sourceRoot":""}